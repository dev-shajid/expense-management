// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL") // uses connection pooling
// }

// model User {
//   id         Int       @id @default(autoincrement())
//   name       String
//   email      String
//   password   String
//   role       String?   @default("user")
//   verified   Boolean?  @default(false)
//   created_at DateTime? @default(now())
// }

// model Project {
//   id            Int           @id @default(autoincrement())
//   name          String
//   details       String?
//   budget        Int
//   total_income  Int?          @default(0)
//   total_expense Int?          @default(0)
//   payable       Int?          @default(0)
//   receivable    Int?          @default(0)
//   status        String?       @default("On Going") // on going -> end
//   start         String
//   transactions  Transaction[]
//   Activity      Activity[]
//   created_at    DateTime?     @default(now())
// }

// model Transaction {
//   id         Int       @id @default(autoincrement())
//   name       String
//   details    String
//   project    Project   @relation(fields: [projectId], references: [id])
//   projectId  Int
//   to_from    String
//   source     String
//   amount     Int
//   type       String // expense - income
//   date       DateTime
//   created_at DateTime? @default(now())
// }

// model Withdraw {
//   id           Int       @id @default(autoincrement())
//   bank_account String
//   details      String
//   amount       Int
//   previous     Int
//   remaining    Int
//   date         DateTime
//   created_at   DateTime? @default(now())
// }

// model Activity {
//   id        Int      @id @default(autoincrement())
//   name      String
//   project   Project  @relation(fields: [projectId], references: [id])
//   projectId Int
//   amount    Int
//   type      String
//   date      DateTime @default(now())
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // MongoDB connection URL
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      String?  @default("user")
  createdAt DateTime @default(now())
}

model Project {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  details       String?
  budget        Int
  total_income  Int?          @default(0)
  total_expense Int?          @default(0)
  payable       Int?          @default(0)
  receivable    Int?          @default(0)
  status        String?       @default("On Going") // on going -> end
  start         DateTime
  transactions  Transaction[]
  activities    Activity[]
  createdAt     DateTime      @default(now())
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  details   String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
  to_from   String
  source    String
  amount    Int
  type      String // expense - income
  date      DateTime
  createdAt DateTime @default(now())
}

model Withdraw {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  bank_account String
  details      String
  amount       Int
  previous     Int
  remaining    Int
  date         DateTime
  createdAt    DateTime @default(now())
}

model Activity {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
  amount    Int
  type      String
  date      DateTime @default(now())
  createdAt DateTime @default(now())
}
