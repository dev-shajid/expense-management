generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // MongoDB connection URL
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  phone     String?  @default("")
  password  String
  role      String?  @default("user")
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String?  @default("")
  phone     String?  @default("")
  address   String?  @default("")
  company   String?  @default("")
  details   String?  @default("")
  since     DateTime @default(now())
  createdAt DateTime @default(now())
}

model Project {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  details     String?
  budget      Int
  income      Int?          @default(0)
  expense     Int?          @default(0)
  payable     Int?          @default(0)
  receivable  Int?          @default(0)
  status      String?       @default("On Going") // on going -> end
  start       DateTime
  createdAt   DateTime      @default(now())
  Transaction Transaction[]
}

model Transaction {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  details    String?
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  String    @db.ObjectId
  withdraw   Withdraw? @relation(fields: [withdrawId], references: [id], onDelete: Cascade)
  withdrawId String?   @db.ObjectId
  to_from    String?   @default("")
  source     String?
  amount     Int
  type       String // expense - income
  isPaid     Boolean   @default(false)
  date       DateTime
  createdAt  DateTime  @default(now())
}

model Withdraw {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  bank_account String
  details      String
  amount       Int
  previous     Int
  remaining    Int?          @default(0)
  date         DateTime
  createdAt    DateTime      @default(now())
  Transaction  Transaction[]
}

model Activity {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  project   String
  amount    Int
  type      String
  action    String
  createdAt DateTime @default(now())
}

model Basic {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  total_project   Int      @default(0)
  ongoing_project Int      @default(0)
  end_project     Int      @default(0)
  income          Int      @default(0)
  expense         Int      @default(0)
  total_income    Int?     @default(0)
  payable         Int?     @default(0)
  receivable      Int?     @default(0)
  createdAt       DateTime @default(now())
}
